<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DAid.Servers</name>
    </assembly>
    <members>
        <member name="T:DAid.Servers.IExecutable">
            <summary>
            Represents an executable server component with start and stop lifecycle methods.
            </summary>
        </member>
        <member name="M:DAid.Servers.IExecutable.StartAsync(System.Threading.CancellationToken)">
            <summary>
            Starts the execution loop asynchronously.
            </summary>
            <param name="cancellationToken">Token to monitor for cancellation requests.</param>
            <returns>An integer indicating the loop's exit reason.</returns>
        </member>
        <member name="M:DAid.Servers.IExecutable.Stop">
            <summary>
            Stops the execution loop. This is thread-safe.
            </summary>
        </member>
        <member name="P:DAid.Servers.IExecutable.Status">
            <summary>
            Gets the current status of the executable.
            </summary>
        </member>
        <member name="T:DAid.Servers.Handler">
            <summary>
            Manages communication between connected clients and DAid sensors.
            </summary>
        </member>
        <member name="T:DAid.Servers.Handler.Cache">
            <summary>
            Represents a buffer cache for a specific device.
            </summary>
        </member>
        <member name="M:DAid.Servers.Handler.StartAsync">
            <summary>
            Initiates communication and negotiates requested devices.
            </summary>
        </member>
        <member name="M:DAid.Servers.Handler.Stop">
            <summary>
            Stops the handler and disconnects clients.
            </summary>
        </member>
        <member name="M:DAid.Servers.Handler.OnRawDataReceived(System.Object,System.String)">
            <summary>
            Handles raw data received from devices.
            </summary>
        </member>
        <member name="M:DAid.Servers.Handler.OnCoPUpdated(System.Object,System.ValueTuple{System.String,System.Double,System.Double,System.Double[]})">
            <summary>
            Handles CoP and pressure data updates from devices.
            </summary>
        </member>
        <member name="M:DAid.Servers.Handler.PrepareResponseBuffer(System.Collections.Generic.IEnumerable{DAid.Servers.Device})">
            <summary>
            Prepares the response buffer with device information.
            </summary>
        </member>
        <member name="M:DAid.Servers.Handler.GetRequestedDevices(System.String[])">
            <summary>
            Retrieves the requested devices from the server's manager.
            </summary>
        </member>
        <member name="M:DAid.Servers.Handler.RegisterDevices(System.Collections.Generic.IEnumerable{DAid.Servers.Device})">
            <summary>
            Registers devices with internal caches and connects them.
            </summary>
        </member>
        <member name="T:DAid.Servers.Manager">
            <summary>
            Manages communication and operations for all devices in the system.
            </summary>
        </member>
        <member name="M:DAid.Servers.Manager.Scan">
            <summary>
            Scans for available devices and adds them to the internal devices list.
            </summary>
        </member>
        <member name="M:DAid.Servers.Manager.Connect(System.String)">
            <summary>
            Connects to a specified device and adds it to the list of active devices.
            </summary>
            <summary>
            Connects to a specified device and adds it to the list of active devices.
            </summary>
        </member>
        <member name="M:DAid.Servers.Manager.GetActiveDevice">
            <summary>
            Retrieves the last connected device (backward compatibility).
            </summary>
        </member>
        <member name="M:DAid.Servers.Manager.GetConnectedDevices">
            <summary>
            Retrieves all currently connected active devices.
            </summary>
        </member>
        <member name="M:DAid.Servers.Manager.GetAllDevices">
            <summary>
            Returns all registered devices.
            </summary>
        </member>
        <member name="M:DAid.Servers.Manager.Cleanup">
            <summary>
            Cleans up and disconnects all devices.
            </summary>
        </member>
        <member name="M:DAid.Servers.Manager.DiscoverDevices">
            <summary>
            Discovers actual devices connected to COM ports but does not automatically connect them.
            </summary>
        </member>
        <member name="M:DAid.Servers.Server.StartProcessingAsync(System.Threading.CancellationToken)">
            <summary>
            Starts the server in a separate task, scanning for devices.
            </summary>
        </member>
        <member name="M:DAid.Servers.Server.Stop">
            <summary>
            Stops the server and cleans up resources.
            </summary>
        </member>
        <member name="M:DAid.Servers.Server.HandlePortResponse(System.String,System.String)">
            <summary>
            Connects to a sensor by scanning available COM ports.
            </summary>
        </member>
        <member name="M:DAid.Servers.Server.HandleConnectCommandAsync(System.Threading.CancellationToken,System.Func{System.Collections.Generic.List{System.String},System.Threading.Tasks.Task})">
            <summary>
            Connects to a sensor by scanning available COM ports.
            </summary>
        </member>
        <member name="M:DAid.Servers.Server.HandleCalibrateCommand">
            <summary>
            Handles the calibrate command.
            </summary>
        </member>
        <member name="M:DAid.Servers.Server.StartDataStream">
            <summary>
            Starts data acquisition for all connected devices.
            </summary>
        </member>
        <member name="M:DAid.Servers.Server.StopDataStream">
            <summary>
            Stops the data streams for all connected devices.
            </summary>
        </member>
        <member name="M:DAid.Servers.Server.HandleExitCommand">
            <summary>
            Stops the server and exits.
            </summary>
        </member>
    </members>
</doc>
